# accessLog = { }

global:
  checkNewVersion: false
  sendAnonymousUsage: false

log:
  level: ERROR

api:
  dashboard: true
  insecure: true
  debug: false


# crowdsec bouncer
experimental:
 plugins:
   bouncer:
     moduleName: github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin
     version: v1.4.1

# experimental.influxDB2:
#   address: "http://influxdb2:8086"
#   token: "my-secure-token-secret"
#   org: "influx-org"
#   bucket: "influx-bucket"
#   addEntryPointsLabels: true
#   addRoutersLabels: true
#   addServicesLabels: true
#   pushInterval: "60s"

# Configuring Multiple Filters
accessLog:
  filePath: "/logs/traefik.log"
  format: json
  filters:
    statusCodes:
      - "200-299" # log successful http requests
      - "400-599" # log failed http requests
    #retryAttempts: true
    #minDuration: "10ms"
  # collect logs as in-memory buffer before writing into log file
  bufferingSize: 0
  fields:
    headers:
      defaultMode: drop # drop all headers per default
      names:
          User-Agent: keep # log user agent strings

serversTransport:
  insecureSkipVerify: true

entryPoints:
### INTERNAL
  # Redirect everything from HTTP to HTTPS
  http-internal:
    address: 10.80.80.3:80
    http:
      redirections:
        entryPoint:
          to: https
          scheme: https

  https-internal:
    address: 10.80.80.3:443
    forwardedHeaders:
    http:
      tls:
        options: default
        certResolver: cloudflare
        domains:
          - main: fqdn1
            sans:
              - '*.fqdn1'
          - main : fqdn2
            sans:
              - '*.fqdn2'
      middlewares:
        - security-headers@file
        - rate-limit@file
        - local-ipwhitelist@file
        # - crowdsec@file # uncomment to enable per default

### EXTERNAL
  # Redirect everything from HTTP to HTTPS
  http-external:
    address: 84.234.21.16:80
    http:
      redirections:
        entryPoint:
          to: https
          scheme: https

  https-external:
    address: 84.234.21.16:443
    forwardedHeaders:
    http:
      tls:
        options: default
        certResolver: cloudflare
        domains:
          - main: fqdn1
            sans:
              - '*.fqdn1'
          - main : fqdn2
            sans:
              - '*.fqdn2'
      middlewares:
        - security-headers@file
        - rate-limit@file
        - crowdsec@file

providers:
  providersThrottleDuration: 2s
  file:
    watch: true
    directory: /etc/traefik/conf.d/

  docker:
    watch: true
    network: proxy
    endpoint: "tcp://socket-proxy:2375"
    # defaultRule: 'Host(`{{ index .Labels "com.docker.compose.service"}}.fqdn1`)'
    exposedByDefault: false

certificatesResolvers:
  cloudflare:
    acme:
      email: "example@example.com"
      storage: "acme.json"
      # caServer: "https://acme-v02.api.letsencrypt.org/directory" # production (default)
      # caServer: "https://acme-staging-v02.api.letsencrypt.org/directory" # staging
      dnsChallenge:
        provider: cloudflare
        resolvers:
          - "1.1.1.1:53"
          - "1.0.0.1:53"
